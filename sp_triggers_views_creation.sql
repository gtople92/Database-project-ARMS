use arms;
#Triggers

DROP TRIGGER if exists COMPANY_TAG_INSERT
DELIMITER //
CREATE TRIGGER COMPANY_TAG_INSERT
AFTER INSERT 
ON company FOR EACH ROW
BEGIN
	INSERT INTO TAG VALUES(NEW.c_tag_id);
END; //
DELIMITER ;

DROP TRIGGER if exists JOB_POSTING_TAG_INSERT
DELIMITER //
CREATE TRIGGER JOB_POSTING_TAG_INSERT
AFTER INSERT 
ON JOB_POSTING FOR EACH ROW
BEGIN
	INSERT INTO TAG VALUES(NEW.j_tag_id);
END; //
DELIMITER ;

DROP TRIGGER if exists EVENT_TAG_INSERT
DELIMITER //
CREATE TRIGGER EVENT_TAG_INSERT
AFTER INSERT 
ON EVENT FOR EACH ROW
BEGIN
	INSERT INTO TAG VALUES(NEW.e_tag_id);
END; //
DELIMITER ;


##Stored procedure

use arms;
DROP PROCEDURE IF EXISTS `INSERT_INTO_COMPANY`;
DELIMITER //
CREATE PROCEDURE `INSERT_INTO_COMPANY`(IN cname VARCHAR(255))
BEGIN
	DECLARE NEW_TAG_ID INT(11);
    SELECT MAX(tag_id) + 1 INTO NEW_TAG_ID FROM TAG;
    INSERT INTO COMPANY (C_TAG_ID, name) VALUES(NEW_TAG_ID, cname);
END; //
DELIMITER ;

DROP PROCEDURE IF EXISTS `CREATE_EVENT`;
DELIMITER //
CREATE PROCEDURE `CREATE_EVENT`(IN TITLE VARCHAR(255), DEP_ID INT(11), LOCATION VARCHAR(255), DATE_TIME DATE)
BEGIN
DECLARE NEW_TAG_ID INT(11);
    SELECT MAX(tag_id) + 1 INTO NEW_TAG_ID FROM TAG;
    INSERT INTO EVENT (E_TAG_ID, title, Dep_ID, Location, Date_time) VALUES(NEW_TAG_ID, TITLE, DEP_ID, LOCATION, DATE_TIME);
END; //
DELIMITER ;

DROP PROCEDURE IF EXISTS `CREATE_JOB_POSTING`;
DELIMITER //
CREATE PROCEDURE `CREATE_JOB_POSTING`(IN C_TAG_ID INT(11), A_USER_ID INT(11), TITLE VARCHAR(255), DESCRIPTION VARCHAR(255), DATE DATE)
BEGIN
	DECLARE NEW_TAG_ID INT(11);
    SELECT MAX(tag_id) + 1 INTO NEW_TAG_ID FROM TAG;
    INSERT INTO JOB_POSTING (J_TAG_ID, C_TAG_ID, A_USER_ID, title, description, date) VALUES(NEW_TAG_ID, C_TAG_ID, A_USER_ID, TITLE, DESCRIPTION, DATE);
END; //
DELIMITER ;


#Views

CREATE VIEW TOP_CAREER_EVENTS (TOPIC, NumOfStudentsAttended) AS 
select CO.Topic, Count(S_USer_ID) As NumOfStudentsAttended 
from career_oriented CO, student_attends SA 
where CO.C_E_Tag_ID = SA.C_E_Tag_ID AND SA.rsvp=1 
group by CO.topic 
order by 2 DESC 
LIMIT 5;
